import numpy as np
import math

# Alpha

alpha_degree1=-90
alpha_degree2=0
alpha_degree3=0
alpha_degree4=-90
alpha_degree5=0
alpha1=np.deg2rad(alpha_degree1)
alpha2=np.deg2rad(alpha_degree2)
alpha3=np.deg2rad(alpha_degree3)
alpha4=np.deg2rad(alpha_degree4)
alpha5=np.deg2rad(alpha_degree5)

# Theta

theta_degree1=93
theta_degree2=-18.3
theta_degree3=-149.9
theta_degree4=-9.2
theta_degree5=16.2
theta1=np.deg2rad(theta_degree1)
theta2=(np.deg2rad(theta_degree2)-1.38)
theta3=(np.deg2rad(theta_degree3)+2.73)
theta4=(np.deg2rad(theta_degree4)-1.35)
theta5=np.deg2rad(theta_degree5)

#

a1=0
a2=289.48866
a3=351.158796
a4=76
a5=0

# Length of link

d1=267
d2=0
d3=0
d4=0
d5=97

#joint 1

DHT1=np.matrix([[np.cos(theta1),-np.cos(alpha1)*np.sin(theta1), np.sin(alpha1)*np.sin(theta1), a1*np.cos(theta1)],
              [np.sin(theta1), np.cos(alpha1)*np.cos(theta1),-np.sin(alpha1)*np.cos(theta1),a1*np.sin(theta1)],
              [0,np.sin(alpha1),np.cos(alpha1),d1],
              [0,0,0,1]])
np.set_printoptions(formatter={'float': '{: 0.1f}'.format})
print('DHT1 is \n',DHT1)

#joint 2

DHT2=np.matrix([[np.cos(theta2),-np.cos(alpha2)*np.sin(theta2), np.sin(alpha2)*np.sin(theta2), a2*np.cos(theta2)],
              [np.sin(theta2), np.cos(alpha2)*np.cos(theta2),-np.sin(alpha2)*np.cos(theta2),a2*np.sin(theta2)],
              [0,np.sin(alpha2),np.cos(alpha2),d2],
              [0,0,0,1]])
np.set_printoptions(formatter={'float': '{: 0.1f}'.format})
print('DHT2 is \n', DHT2)

#joint 3

DHT3=np.matrix([[np.cos(theta3),-np.cos(alpha3)*np.sin(theta3), np.sin(alpha3)*np.sin(theta3), a3*np.cos(theta3)],
              [np.sin(theta3), np.cos(alpha3)*np.cos(theta3),-np.sin(alpha3)*np.cos(theta3),a3*np.sin(theta3)],
              [0,np.sin(alpha3),np.cos(alpha3),d3],
              [0,0,0,1]])
np.set_printoptions(formatter={'float': '{: 0.1f}'.format})
print('DHT3 is \n',DHT3)

#joint 4

DHT4=np.matrix([[np.cos(theta4),-np.cos(alpha4)*np.sin(theta4), np.sin(alpha4)*np.sin(theta4), a4*np.cos(theta4)],
              [np.sin(theta4), np.cos(alpha4)*np.cos(theta4),-np.sin(alpha4)*np.cos(theta4),a4*np.sin(theta4)],
              [0,np.sin(alpha4),np.cos(alpha4),d4],
              [0,0,0,1]])
np.set_printoptions(formatter={'float': '{: 0.1f}'.format})
print('DHT4 is \n',DHT4)

#joint 5

DHT5=np.matrix([[np.cos(theta5),-np.cos(alpha5)*np.sin(theta5), np.sin(alpha5)*np.sin(theta5), a5*np.cos(theta5)],
              [np.sin(theta5), np.cos(alpha5)*np.cos(theta5),-np.sin(alpha5)*np.cos(theta5),a5*np.sin(theta5)],
              [0,np.sin(alpha5),np.cos(alpha5),d5],
              [0,0,0,1]])
np.set_printoptions(formatter={'float': '{: 0.1f}'.format})
print('DHT5 is \n',DHT5)

# Post Multiplication of 5 joints
A=np.dot(DHT1,DHT2)
B=np.dot(A,DHT3)
C=np.dot(B,DHT4)
TotalEffect=np.dot(C,DHT5)

print('Postion of the arm is \n',TotalEffect)
#p=[[0],[0],[0],[1]]
#pm=np.dot(TotalEffect_2,p)
#pm


# get the desired row value

X = TotalEffect[0, 3]
print('Postion of the arm in X axis is : ', X )
Y = TotalEffect[1, 3]
print('Postion of the arm in Y axis is : ', Y )
Z = TotalEffect[2, 3]
print('Postion of the arm in Z axis is : ', Z )

